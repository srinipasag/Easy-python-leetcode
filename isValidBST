# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def isValidBST(self, root: TreeNode) -> bool:
        if not root: return True
        stack = [(root, None, None)]
        while stack:
            node, lbound, ubound = stack.pop()
            if lbound is not None and lbound >= node.val: return False
            if ubound is not None and ubound <= node.val: return False
            if node.left:  stack.append((node.left, lbound, node.val))
            if node.right: stack.append((node.right, node.val, ubound))
                
        return True
